@use "../../css/mixins";

/**
    # EvButton
 */
.ev-button {
    --current-height: var(--input-height-medium);

    align-items: center;
    border: 1px solid transparent;
    border-radius: var(--input-radius);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--text-medium);
    font-weight: var(--font-weight-semibold);
    height: var(--current-height);
    line-height: 1.15;
    justify-content: center;
    padding-inline: calc(0.38 * var(--current-height));
    position: relative;
    text-decoration: none !important;
    transition: background 0.15s ease-in-out, color 0.15s ease-in-out;
    user-select: none;

    &:focus-visible {
        outline: 2px solid var(--border-focused);
        outline-offset: 2px;
    }

    > * {
        display: inline-flex;
        opacity: 1;
        transition: opacity 0.25s ease-in-out;
    }
}

.ev-button--text {
    padding-inline: calc(0.19 * var(--current-height));
}

/**
    ## Disabled
 */
.ev-button {
    &[disabled],
    &.is-disabled {
        @include mixins.is-disabled;
    }
}

/**
    ## Full Width
 */
.ev-button {
    &.is-fullwidth {
        width: 100%;
    }
}


/**
    ## Loading State

    Fades out all internal elements except the loading spinner, which fades in
    over the top of all other content.
 */
.ev-button {
    &.is-loading {
        pointer-events: none;

        > * {
            opacity: 0;
        }

        > .ev-button--loading {
            opacity: 1;
            position: absolute;
            inset: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    }
}


/**
    ## Appearance

    Appearance modifier classes based on available `appearance` options:
    - default
    - danger
    - primary
    - subtle
 */
.ev-button {
    color: currentColor;

    /* Default */
    &.is-appearance-default {
        background-color: var(--background-neutral);
        &:hover {
            background-color: var(--background-neutral-hovered);
        }
        &:active {
            background-color: var(--background-neutral-pressed);
        }

        &.is-variant-bold {
            color: var(--text-inverse);
            background-color: var(--background-neutral-bold);
            &:hover {
                background-color: var(--background-neutral-bold-hovered);
            }
            &:active {
                background-color: var(--background-neutral-bold-pressed);
            }
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-neutral-bold);
            &.is-active {
                background-color: var(--background-neutral);
            }
            &:hover {
                background-color: var(--background-neutral-hovered);
            }
            &:active {
                background-color: var(--background-neutral-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: var(--background-neutral-subtle);
            &:hover {
                background-color: var(--background-neutral-subtle-hovered);
            }
            &:active {
                background-color: var(--background-neutral-subtle-pressed);
            }
        }
    }

    /* Danger */
    &.is-appearance-danger {
        background-color: var(--background-danger-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-danger-bold-hovered);
        }
        &:active {
            background-color: var(--background-danger-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-danger-bold);
            color: var(--text-danger);
            &.is-active {
                background-color: var(--background-danger);
            }
            &:hover {
                background-color: var(--background-danger-hovered);
            }
            &:active {
                background-color: var(--background-danger-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-danger-hovered);
            }
            &:active {
                background-color: var(--background-danger-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-danger);
            &:hover {
                background-color: var(--background-danger-hovered);
            }
            &:active {
                background-color: var(--background-danger-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--text-danger);
        }
    }

    /* Information */
    &.is-appearance-information {
        background-color: var(--background-information-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-information-bold-hovered);
        }
        &:active {
            background-color: var(--background-information-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-information-bold);
            color: var(--text-information);
            &.is-active {
                background-color: var(--background-information);
            }
            &:hover {
                background-color: var(--background-information-hovered);
            }
            &:active {
                background-color: var(--background-information-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-information-hovered);
            }
            &:active {
                background-color: var(--background-information-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-information);
            &:hover {
                background-color: var(--background-information-hovered);
            }
            &:active {
                background-color: var(--background-information-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--text-information);
        }
    }

    /* Notice */
    &.is-appearance-notice {
        background-color: var(--background-notice-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-notice-bold-hovered);
        }
        &:active {
            background-color: var(--background-notice-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-notice-bold);
            color: var(--text-notice);
            &.is-active {
                background-color: var(--background-notice);
            }
            &:hover {
                background-color: var(--background-notice-hovered);
            }
            &:active {
                background-color: var(--background-notice-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-notice-hovered);
            }
            &:active {
                background-color: var(--background-notice-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-notice);
            &:hover {
                background-color: var(--background-notice-hovered);
            }
            &:active {
                background-color: var(--background-notice-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--text-notice);
        }
    }

    /* Primary */
    &.is-appearance-primary {
        background-color: var(--background-brand-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-brand-bold-hovered);
        }
        &:active {
            background-color: var(--background-brand-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-brand-bold);
            color: var(--text-brand);
            &.is-active {
                background-color: var(--background-brand);
            }
            &:hover {
                background-color: var(--background-brand-hovered);
            }
            &:active {
                background-color: var(--background-brand-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-brand-hovered);
            }
            &:active {
                background-color: var(--background-brand-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-brand);
            &:hover {
                background-color: var(--background-brand-hovered);
            }
            &:active {
                background-color: var(--background-brand-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--link-default);
        }
    }

    /* Success */
    &.is-appearance-success {
        background-color: var(--background-success-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-success-bold-hovered);
        }
        &:active {
            background-color: var(--background-success-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-success-bold);
            color: var(--text-success);
            &.is-active {
                background-color: var(--background-success);
            }
            &:hover {
                background-color: var(--background-success-hovered);
            }
            &:active {
                background-color: var(--background-success-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-success-hovered);
            }
            &:active {
                background-color: var(--background-success-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-success);
            &:hover {
                background-color: var(--background-success-hovered);
            }
            &:active {
                background-color: var(--background-success-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--text-success);
        }
    }

    /* Warning */
    &.is-appearance-warning {
        background-color: var(--background-warning-bold);
        color: var(--text-inverse);
        &:hover {
            background-color: var(--background-warning-bold-hovered);
        }
        &:active {
            background-color: var(--background-warning-bold-pressed);
        }

        &.is-variant-outlined {
            background: transparent;
            border-color: var(--background-warning-bold);
            color: var(--text-warning);
            &:hover {
                background-color: var(--background-warning-hovered);
            }
            &:active {
                background-color: var(--background-warning-pressed);
            }
        }

        &.is-variant-subtle {
            background-color: transparent;
            &:hover {
                background-color: var(--background-warning-hovered);
            }
            &:active {
                background-color: var(--background-warning-pressed);
            }
        }

        &.is-variant-tonal {
            background-color: var(--background-warning);
            &:hover {
                background-color: var(--background-warning-hovered);
            }
            &:active {
                background-color: var(--background-warning-pressed);
            }
        }

        &.is-variant-subtle,
        &.is-variant-tonal,
        &.is-variant-link {
            color: var(--text-warning);
        }
    }

    /* Inverse */
    &.is-appearance-inverse {
        background: var(--background-inverse);
        &:hover {
            background: var(--background-inverse-hovered);
        }
        &:active {
            background: var(--background-inverse-pressed);
        }

        &.is-variant-bold {
            color: var(--text-on-inverse);
            background: var(--background-inverse-bold);

            &:hover {
                background: var(--background-inverse-bold-hovered);
            }
            &:active {
                background: var(--background-inverse-bold-pressed);
            }
        }

        &.is-variant-tonal {

        }
    }

    /** Link Variant */
    &.is-variant-link {
        background: transparent;

        &:hover,
        &:active {
            background: transparent;

            .ev-button--text {
                text-decoration: underline;
            }
        }
    }
}


/**
    ## Sizes

    Size modifier classes based on available `size` options:
    - small
    - medium (default)
    - large
 */
.ev-button {

    /** X Small */
    &.is-size-x-small {
        --current-height: var(--input-height-x-small);
    }

    /* Small */
    &.is-size-small {
        --current-height: var(--input-height-small);
    }

    /* Large */
    &.is-size-large {
        font-size: var(--text-large);
        --current-height: var(--input-height-large);
    }

    /* X Large */
    &.is-size-x-large {
        font-size: var(--text-large);
        --current-height: var(--input-height-x-large);
    }
}


/**
    ## Rounded modifier
*/
.ev-button {
    &.is-rounded {
        border-radius: 999px;
        padding-inline: var(--spacer-200);

        /* Accommodate small size modifier */
        &.is-size-small {
            padding-inline: var(--spacer-150);
        }
    }
}



/**
    ## Icon

    When the button only contains an icon.
 */
.ev-button {
    &.is-icon {
        padding: 0 !important;
        aspect-ratio: 1;
    }
}