@use "../../css/mixins";

/**
    # EvButton
 */
.ev-button {
    align-items: center;
    border: 0;
    border-radius: var(--input-radius);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--text-medium);
    font-weight: var(--font-weight-semibold);
    height: var(--input-height-medium);
    line-height: 1.15;
    justify-content: center;
    padding-inline: var(--spacer-75);
    position: relative;
    text-decoration: none !important;
    transition: background 0.15s ease-in-out;
    user-select: none;

    &:focus-visible {
        outline: 2px solid var(--border-focused);
        outline-offset: 2px;
    }

    > * {
        display: inline-flex;
        opacity: 1;
        transition: opacity 0.25s ease-in-out;
    }
}

.ev-button--text {
    padding-inline: var(--spacer-50);
}

/**
    ## Disabled
 */
.ev-button {
    &[disabled],
    &.is-disabled {
        @include mixins.is-disabled;
    }
}

/**
    ## Full Width
 */
.ev-button {
    &.is-fullwidth {
        width: 100%;
    }
}


/**
    ## Loading State

    Fades out all internal elements except the loading spinner, which fades in
    over the top of all other content.
 */
.ev-button {
    &.is-loading {
        pointer-events: none;

        > * {
            opacity: 0;
        }

        > .ev-button--loading {
            opacity: 1;
            position: absolute;
            inset: 0;
            display: flex;
            justify-content: center;
            align-items: center;
        }
    }
}


/**
    ## Appearance

    Appearance modifier classes based on available `appearance` options:
    - default
    - danger
    - primary
    - subtle
 */
.ev-button {

    /* Default */
    &.appearance-default {
        background-color: var(--button-default-background);
        color: var(--text-default);
        &:hover {
            background-color: var(--button-default-background-hover);
        }
        &:active {
            background-color: var(--button-default-background-active);
        }
    }

    /* Danger */
    &.appearance-danger {
        background-color: var(--button-danger-background);
        color: var(--surface-default);
        &:hover {
            background-color: var(--button-danger-background-hover);
        }
        &:active {
            background-color: var(--button-danger-background-active);
        }
    }

    /* Primary */
    &.appearance-primary {
        background-color: var(--button-primary-background);
        color: var(--surface-default);
        &:hover {
            background-color: var(--button-primary-background-hover);
        }
        &:active {
            background-color: var(--button-primary-background-active);
        }
    }

    /* Subtle */
    &.appearance-subtle {
        background-color: var(--button-subtle-background);
        color: var(--text-default);
        &:hover {
            background-color: var(--button-subtle-background-hover);
        }
        &:active {
            background-color: var(--button-subtle-background-active);
        }
    }
}


/**
    ## Sizes

    Size modifier classes based on available `size` options:
    - small
    - medium (default)
    - large
 */
.ev-button {

    /* Small */
    &.size-small {
        height: var(--input-height-small);
        padding-inline: var(--spacer-50);

        .ev-button--text {
            padding-inline: var(--spacer-25);
        }
    }

    /* Large */
    &.size-large {
        height: var(--input-height-large);
        font-size: var(--text-large);
        padding-inline: var(--spacer-150);
    }
}


/**
    ## Rounded modifier
*/
.ev-button {
    &.is-rounded {
        border-radius: 999px;
        padding-inline: var(--spacer-100);

        /* Accommodate small size modifier */
        &.size-small {
            padding-inline: var(--spacer-75);
        }
    }
}


/**
    ## Icon

    When the button only contains an icon.
 */
.ev-button {
    &.is-icon {
        padding: 0 !important;
        aspect-ratio: 1;
    }
}